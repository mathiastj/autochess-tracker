{"version":3,"sources":["components/MmrChart.js","components/PlayerIdInputForm.js","components/PlayerInfo.js","App.js","serviceWorker.js","index.js"],"names":["ranks","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","rankFormatter","mmrlevel","MmrChart","fixData","dataPoints","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","point","value","fetchedat","Date","toDateString","err","return","this","props","data","react_default","a","createElement","es6","height","className","width","margin","top","right","left","bottom","dataKey","textAnchor","tick","angle","domain","allowDecimals","tickFormatter","wrapperStyle","borderColor","boxShadow","formatter","name","contentStyle","backgroundColor","labelStyle","fontWeight","color","type","stroke","yAxisId","Component","PlayerIdInputForm","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","playerId","handleChange","bind","assertThisInitialized","handleSubmit","event","setState","target","onUpdate","preventDefault","Form","onSubmit","inline","FormGroup","Label","for","Input","id","placeholder","onChange","Button","PlayerInfo","user","console","log","Media","object","src","url","alt","body","tag","matches","App","axios","get","concat","res","stats","results","getStats","_this2","components_PlayerIdInputForm","handlePlayerUpdate","components_PlayerInfo","components_MmrChart","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bfbc3868.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Line,\r\n  LineChart,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis\r\n} from \"recharts\";\r\n\r\nconst ranks = {\r\n  0: \"Unranked\",\r\n  1: \"Pawn 1\",\r\n  2: \"Pawn 2\",\r\n  3: \"Pawn 3\",\r\n  4: \"Pawn 4\",\r\n  5: \"Pawn 5\",\r\n  6: \"Pawn 6\",\r\n  7: \"Pawn 7\",\r\n  8: \"Pawn 8\",\r\n  9: \"Pawn 9\",\r\n  10: \"Knight 1\",\r\n  11: \"Knight 2\",\r\n  12: \"Knight 3\",\r\n  13: \"Knight 4\",\r\n  14: \"Knight 5\",\r\n  15: \"Knight 6\",\r\n  16: \"Knight 7\",\r\n  17: \"Knight 8\",\r\n  18: \"Knight 9\",\r\n  19: \"Bishop 1\",\r\n  20: \"Bishop 2\",\r\n  21: \"Bishop 3\",\r\n  22: \"Bishop 4\",\r\n  23: \"Bishop 5\",\r\n  24: \"Bishop 6\",\r\n  25: \"Bishop 7\",\r\n  26: \"Bishop 8\",\r\n  27: \"Bishop 9\",\r\n  28: \"Rook 1\",\r\n  29: \"Rook 2\",\r\n  30: \"Rook 3\",\r\n  31: \"Rook 4\",\r\n  32: \"Rook 5\",\r\n  33: \"Rook 6\",\r\n  34: \"Rook 7\",\r\n  35: \"Rook 8\",\r\n  36: \"Rook 9\",\r\n  37: \"King\",\r\n  38: \"Queen\",\r\n  39: \"Queen\",\r\n  40: \"Queen\"\r\n};\r\n\r\nconst rankFormatter = mmrlevel => {\r\n  return ranks[mmrlevel];\r\n};\r\n\r\nclass MmrChart extends Component {\r\n  fixData = dataPoints => {\r\n    for (const point of dataPoints) {\r\n      point.fetchedat = new Date(point.fetchedat).toDateString();\r\n    }\r\n    return dataPoints;\r\n  };\r\n\r\n  render() {\r\n    const { dataPoints } = this.props;\r\n\r\n    if (!dataPoints) {\r\n      return null;\r\n    }\r\n\r\n    const data = this.fixData(dataPoints);\r\n\r\n    return (\r\n      <ResponsiveContainer height={500} className=\"chart-container\">\r\n        <LineChart\r\n          width={400}\r\n          height={400}\r\n          data={data}\r\n          margin={{ top: 5, right: 20, left: 10, bottom: 5 }}\r\n        >\r\n          <XAxis\r\n            dataKey=\"fetchedat\"\r\n            textAnchor=\"end\"\r\n            tick={{ angle: -70 }}\r\n            height={150}\r\n          />\r\n\r\n          <YAxis\r\n            dataKey=\"mmrlevel\"\r\n            domain={[\"auto\", \"auto\"]}\r\n            allowDecimals={false}\r\n            tickFormatter={rankFormatter}\r\n            width={80}\r\n          />\r\n          <Tooltip\r\n            wrapperStyle={{\r\n              borderColor: \"white\",\r\n              boxShadow: \"2px 2px 3px 0px rgb(204, 204, 204)\"\r\n            }}\r\n            formatter={(value, name, props) => {\r\n              return [rankFormatter(value)];\r\n            }}\r\n            contentStyle={{ backgroundColor: \"rgba(255, 255, 255, 0.8)\" }}\r\n            labelStyle={{ fontWeight: \"bold\", color: \"#666666\" }}\r\n          />\r\n          <Line\r\n            type=\"monotone\"\r\n            dataKey=\"mmrlevel\"\r\n            stroke=\"#ff7300\"\r\n            yAxisId={0}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MmrChart;\r\n","import React, { Component } from \"react\";\r\nimport { Button, Form, FormGroup, Label, Input } from \"reactstrap\";\r\n\r\nclass PlayerIdInputForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { playerId: props.playerId };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ playerId: event.target.value });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    this.props.onUpdate(this.state.playerId);\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Form onSubmit={this.handleSubmit} inline>\r\n        <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\r\n          <Label for=\"steamid\" className=\"mr-sm-2\">\r\n            SteamID64\r\n          </Label>\r\n          <Input\r\n            type=\"text\"\r\n            id=\"steamid\"\r\n            placeholder={this.props.playerId}\r\n            onChange={this.handleChange}\r\n          />\r\n        </FormGroup>\r\n        <Button>Get Stats</Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlayerIdInputForm;\r\n","import React, { Component } from \"react\";\r\nimport { Media } from \"reactstrap\";\r\n\r\nclass PlayerInfo extends Component {\r\n  render() {\r\n    let { user } = this.props;\r\n    if (!user) {\r\n      return null;\r\n    }\r\n    console.log(user);\r\n\r\n    return (\r\n      <div>\r\n        <Media className=\"playerInfoDiv\">\r\n          <Media>\r\n            <Media object src={user.url} alt=\"Player avatar\" />\r\n          </Media>\r\n          <Media body>\r\n            <Media className=\"username\">{user.tag}</Media>\r\n            <Media className=\"matches\">Mathes: {user.matches}</Media>\r\n          </Media>\r\n        </Media>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlayerInfo;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport MmrChart from \"./components/MmrChart\";\nimport PlayerIdInputForm from \"./components/PlayerIdInputForm\";\nimport PlayerInfo from \"./components/PlayerInfo\";\n\nconst endpoint = \"https://warm-taiga-16419.herokuapp.com/db-stats\";\nconst initialPlayerId = \"76561197978098862\";\n\nclass App extends Component {\n  state = {};\n\n  async getStats(playerId) {\n    const res = await axios.get(`${endpoint}/${playerId}`);\n    this.setState({ stats: res.data.results, user: res.data.user });\n  }\n\n  async componentDidMount() {\n    await this.getStats(initialPlayerId);\n  }\n\n  async handlePlayerUpdate(playerId) {\n    await this.getStats(playerId);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <PlayerIdInputForm\n            playerId={initialPlayerId}\n            onUpdate={playerId => this.handlePlayerUpdate(playerId)}\n          />\n          <PlayerInfo user={this.state.user} />\n          <MmrChart dataPoints={this.state.stats} />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}